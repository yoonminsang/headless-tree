name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:

env:
  NODE_VERSION: 22.17.1

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.version-check.outputs.changed }}
      current-version: ${{ steps.version-check.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          PREVIOUS_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
          
          echo "Current version: $CURRENT_VERSION"
          echo "Previous version: $PREVIOUS_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ] && [ "$CURRENT_VERSION" != "0.0.0" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "❌ Version not changed or still 0.0.0"
          fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Publish to npm
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.current-version }}
          release_name: Release v${{ needs.check-version.outputs.current-version }}
          draft: false
          prerelease: false